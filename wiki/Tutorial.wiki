#summary Introduce basic GUARDD functions
#sidebar TableOfContents

<wiki:comment>
  This text will be removed from the rendered page.

  <wiki:gadget url="http://mathml-gadget.googlecode.com/svn/trunk/mathml-gadget.xml" border="0" up_content="root3x + x^phi + x_1" height="15"/>

  http://code.google.com/images/code_sm.png

  # 1
    # 2
      # 3
	# 4


  * 1
    * 2
      * 3
	* 4


<ol>
  <li>1</li>
  <ol>
    <li>2</li>
    <ol>
      <li>3</li>
      <ol>
	<li>4</li>
      </ol>
    </ol>
  </ol>
</ol>


</wiki:comment>







== Contents == 
<wiki:toc max_depth="5" />

== Goals == 
  * Become familiar with basic features of GUARDD

== Requirements ==
  # 60-90 min
  # Matlab software [http://www.mathworks.com/ Mathworks]
  # GUARDD program [http://code.google.com/p/guardd/downloads/list download]
    # Matlab .m and .fig files
  # Tutorial files for this example [http://code.google.com/p/guardd/downloads/list download]
    # tutorial-data/
      # LIST DATA FILES
    # tutorial-figures/
      # Screen capture images linked within this tutorial
      # tutorial-output/
      # Output figures for some plots produced during tutorial 


== General notes ==  
  # GUARDD utilizes multiple GUI windows (may need to be resized)
    # Higher monitor resolution helps (1024x768 minimum)
  # GUARDD main window *must remain open* (it controls other GUI elements) [Figure] 
  # Check Matlab command window for additional output
  # GUARDD is sometimes slow. Turn on CPU monitor to see when program is processing
    # *Win*: Ctrl+Alt+Del, click _Task Manager_
    # *Mac*: ?    
  # "Tooltips" are revealed by hovering mouse cursor over buttons, tables, etc.

== Notation ==  
  * NMR = Nuclear Magnetic Resonance
  * GUARDD = Graphical User-friendly Analysis of Relaxation Dispersion Data
  * RD = Relaxation Disperion
  * 4-5 parameters are required to fit a single RD curve
    # dwH = Δω,,H,,, = ^1^H chemical shift difference between states A and B (ppm, rad/s, Hz) - *MQ only*
    # dwX = Δω,,X,,, = ^A^X chemical shift difference between states A and B (ppm, rad/s, Hz)
    # P,,A,, = Population fraction of A state (fraction, %)
    # k,,ex,, = k,,A,, + k,,B,, = Total exchange rate between states (/s)
    # R,,2,,^0^ = Transverse relaxation rate in the absence of exchange (Hz)
  * SQ = Single Quantum (signal detected in NMR)
    * *Note*: SQ curves that pulse on ^A^X nucleus are sensitive _only_ to dwX (i.e., dwH is fixed to zero)
  * MQ = Multiple Quantum (signal detected in NMR)
    * *Note*: MQ RD curves are sensitive to _both_ dwH and dwX

  * GUI = Graphical User Interface  
  * <u>Underlined</u> items are GUARDD window titles
  * *Boldface* items are commands (buttons, menus) and important points

  * MC = Monte Carlo (randomization method used here for error analysis)
  * Chi2 = χ^2^ = Goodness of fit metric (smaller value indicates better fit)
    * Statistics χ^2^ and SSE are considered equivalent in this tutorial (see [Manual])  

== Tutorial ==

=== Download and unpack files ===
  # Download files [http://code.google.com/p/guardd/downloads/list download]
  # Unpack files
    # E.g., "/home/user/Desktop/" or "C:\My_Favorite_Folder\"
  # Ensure proper directory structure
    # GUARDD/

=== Start GUARDD ===
  # Start *Matlab*  
  # Open Matlab command window: *Desktop...Command Window*
  # Navigate to GUARDD/ directory and start program
    # <u>Matlab command window</u>: _cd 'c:\My_Favorite_Folder'_
    # <u>Matlab command window</u>: _GUARDDD_
  # *Important*: Main window must remain open (it controls all other GUI windows)
  # Check Matlab command window for additional output

=== Load data ===
  * *Goal*: _Get RD data into the program for analysis_
  * *Tip*: _A variety of input types are available (see [Manual])_

  # <u>Main</u>
    # *Input...Data manager...*
  # <u>Data Manager</u>
    # *Input...Script...*
      # tutorial/data/GUARDD-Data-ApoTRAP-Kleckner.txt            
    # *Input...Sequence...*
      # tutorial/data/TRAP-Ste-A26I-AAseq.txt
  # 14 datasets loaded    
    # 600 and 800 MHz
    # 25, 32, and 37^o^C
    # SQ and MQ coherence


=== Create groups for fitting ===
  * *Goal*: _Aggregate RD curves from the same NMR signal (assignment) for group fitting_
  * *Details*: Read more in the [Manual]
  http://guardd.googlecode.com/files/figure-data_management.png

  # <u>Data Manager</u>    
    # *Group...Generate from subset of data...*
  # <u>Create Groups</u>
    # Make groups only for Ile residues at 25^o^C
      # Check _Residue_
      # Type _Ile_
      # Check _TempC_
      # Type _25_
    # Click *Generate groups*
  # <u>Data Manager</u>
    # *Group...Generate from subset of data...*
  # <u>Create Groups</u>
    # Make groups only for index 22
      # Check _Residue_
      # Type _22_
    # Click *Generate groups*
  # <u>Data Manager</u>
    # *Group...Sort groups*
  # Close the <u>Data Manager</u> window

=== Select residues with exchange ===
  * *Goal*: _Determine which groups exhibit flexibility, and warrant further analysis_  
  * *Details*: Read more in the [Manual]

  # <u>Main</u>
    # Click *Refresh* to show loaded groups
    # Use *<* and *>* to cycle through groups
    # Check *Exch?* if the data are not horizontal (i.e., R,,ex,, > 0)
      # *Note*: only Ile 61δ,,1,, and Ile 68δ,,1,, do not exhibit exchange


=== Fit iso-temperature group manually ===
  * *Goal*: _Fit simple data from one group manually via Fit RD window_
  * *Goal*: _Demonstrate simple fitting options_

  # <u>Main</u>
    # Select _Ile 26_
    # Check _Fit dispersion_
    # Click *Update displays*
  # <u>Fit RD</u>
    # _Contains 6 panels for sequential fitting tasks_
    # (1a) Procedure: *Individual*
    # (1b) Task: *Simulate*
    # (2) Individual initial conditions: (Leave default)
      # One may change PA, kex, dwH, and dwX
      # There are _five_ parameters required for each RD curve: _dwH, dwX, PA, kex,_ and _R20_
    # Click *Go!*
    # (1b) Task: *Optimize fit*
    # Click *Go!*
    # (3) Select and view fit results
      # There are three fits to data: NoEx, Sim-1, and Fit-1
      # Select each at a time, and note that _Sim-1_ is the best (lines go through data in (4))
      # Select _Sim-1_
      # Click *Set best fit*
    # (6) Designate which parameters are OK
      # Check *Best fit is OK*
      # Click *All*


=== Fit multi-temperature group manually ===
  * *Goal*: _Fit multi-temperature data from one group manually via Fit RD window_
  * *Goal*: _Demonstrate multi-temperature fitting options with constrain rate analysis_
  * *Goal*: _Demonstrate need for grid search_
  * *Details*: Read more in the [Manual]

  # <u>Main</u>
    # Select _Leu 22δ1_
    # Check _Fit dispersion_
    # Click *Update displays*
  # <u>Fit RD</u>
    # Fit without rate constraints
    # (1a) Procedure: *Individual*
    # (1b) Task: *Simulate*
    # Uncheck *Constrain Rates*
    # (2) Individual initial conditions
      # TempC PA kex
      # These determined the parameters required for each RD curve: _dwH, dwX, PA, kex,_ and _R20_
    # Click *Go!*
    # (1b) Task: *Optimize fit*
    # Click *Go!*

    # Fit with rate constraints
    # (1a) Procedure: *Individual*
    # (1b) Task: *Simulate*
    # Check *Constrain Rates*
    # (2) Individual initial conditions
      # Temp0 PA0 kex0 dH Eab
      # There are _five_ parameters required for each RD curve: _dwH, dwX, PA, kex,_ and _R20_
    # Click *Go!*
    # (1b) Task: *Optimize fit*
    # Click *Go!*



    # (2) Another set of individial initial conditions
      # *Issue*: Final optimized fit depends on initial conditions! (Which one is best?)
      # *Solution*: Use grid search to automatically sample many different initial conditions

    # Select the best fit
    # (6) Designate which parameters are OK
      # Check *Best fit is OK*
      # Click *All*


=== Fit exchanging data via grid search ===
  * *Goal*: _If the fit is sensitive to initial conditions (noisy and/or many data), use a grid search to fit many times_
  * *Details*: Read more in the [Manual]


=== Select best fit from grid search ===
  * *Goal*: _Assess the extent to which fitting is sensitive to initial conditions_
  * *Details*: Read more in the [Manual]


=== Determine which parameters are OK ===
  * *Goal*: _Often, some parameters cannot be determined via fitting (e.g., fast exchange precludes knowledge of P,,A,, and Δω)_

  # Check exchange-timescale parameter α
  # Check sensitivity of fit to initial conditions (grid search)
  # Check sensitivity of fit to errors in data (Monte Carlo errors)

=== Compute errors with Monte Carlo ===
  * *Goal*: _Assess the extent to which fitting is sensitive to noise in the data_
  * *Details*: Read more in the [Manual]


=== Determine which parameters which are OK ===
  * *Goal*: _Only use fitted parameters which are trustworthy_
  

=== View results via display cluster ===
  * *Goal*: _Aggregate and output any/all results for dissemination_


=== View results via table ===
  * *Goal*: _Aggregate and output any/all results for dissemination_

=== Export data and groups ===
  * *Goal*: _Aggregate and output results for dissemination_


=== Perform batch task ===
  * *Goal*: _Fit several groups sequentially to obviate need for user input_

  # <u>Main</u>
    # *Analysis...Batch task...*
  # <u>Batch</u>
    # Select groups for analysis    
    # Specify the task
      # Grid search: *Optimize*
      # Constrain rates: *Unchecked*
      # Errors: *Unchecked*
    # Specify grid search limits

|| || *dwH(ppm)* || *dwX(ppm)* || *PA0(%)* || *kex0(/s)* ||
|| *Min* || 0.01  || 0.1  || 80  || 500  ||
|| *Max* || 0.1  || 3.00  || 99.9  || 3000  ||
|| *Steps*|| 1  || 2  || 2  || 3  ||

  # <u>Batch</u>
    # Click *Go!*
      # Takes ~14 min at 10 sec/step

=== Simulate data and import to GUARDD ===
  * *Goal*: _Explore the nature of RD phenomena_
  * *Question*: What are limits of detection (i.e., when is R,,ex,,>0)?_
  

=== Fit simulated data ===
  * *Goal*: _Assess accuracy of fitting procedure by analyzing data with "known" solution_


== References ==
(C) Ian Kleckner

Last update 2011/06/08